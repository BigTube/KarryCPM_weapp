<template>
  <view class="list-wrap">
    <wxc-tab
      default-index="{{0}}"
      component-id="c2"
      animate="{{true}}"
      bind:tabchange="random"
      class="demo-tab"
    >
      <view slot="tablabel">
        <wxc-tab-label
          wx:for="{{tabs}}"
          wx:for-item="tab"
          wx:key="{{tab.title}}"
          tab-index="{{index}}"
          component-id="c2"
        >
          <view class="demo-tab__label">
            <view class="demo-tab__text {{ activeKey === index ? 'demo-tab--active' : ''}}">
              {{tab.title}}
            </view>
          </view>
        </wxc-tab-label>
      </view>
      <wxc-tab-panel
        wx:for="{{tabs}}"
        wx:for-item="tab"
        wx:key="{{tab.content}}"
        tab-index="{{index}}"
        component-id="c2"
      >
      </wxc-tab-panel>
    </wxc-tab>

    <view class="list-item">
      <wxc-panel border="{{false}}" wx:for="{{products}}"
        wx:key="{{desc}}">
        <wxc-flex class="wrap" main="stretch" cross="center">
          <image class="demo__pic" src="{{item.src}}" mode="aspectFit" />
          <view class="right">
            <p class="title">{{item.title}}</p>
            <p class="desc">型号: {{item.desc}}</p>
            <p class="desc">价格: {{item.price}} 元</p>
            <wxc-button size="small" type="info" value="加入购物车" bindclick="gotoCart"></wxc-button>
            <wxc-button size="small" type="selection" value="收藏" class="button-right" bindclick="gotoCollection"></wxc-button>
          </view>
        </wxc-flex>
      </wxc-panel>
    </view>
    <wxc-toast is-show="{{$toast.show}}" text="{{$toast.title}}" icon="{{$toast.icon}}" icon-color="#ff5777"></wxc-toast>
  </view>
</template>

<style lang="less">
.demo-tab {
  .demo-tab__label {
    width: 100%;
    margin: 20rpx 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .demo-tab__text {
    margin-left: 8rpx;
    font-size: 12px;
  }
  .demo-tab--active {
    color: #ff5777;
  }
}

.list-wrap {
  width: 100%;
  background: #efefef;
  padding-bottom: 30rpx;
  padding-top: 30rpx;
}
.wrap {
  display: block;
  height: 250rpx;
  padding: 10rpx 20rpx;
  margin: 20rpx;
  border: 1px solid #eee;
}
.list-item {
  background: #fff;
  margin-bottom: 30rpx;
}
.product {
  height: 150rpx;
}
.demo__pic {
  height: 250rpx;
  width: 250rpx;
}
.right {
  margin-left: 20rpx;
}
.title {
  display: block;
  margin-bottom: 8px;
}
.desc {
  display: block;
  color: #ccc;
  font-size: 12px;
}
.button-right{
  margin-left: 10px;
}
</style>

<script>
import wepy from 'wepy';

export default class Shopping extends wepy.page {
  config = {
    navigationBarTitleText: '商品列表',
    usingComponents: {
      'wxc-button': '../../packages/@minui/wxc-button/dist/index',
      'wxc-list': '../../packages/@minui/wxc-list/dist/index',
      'wxc-icon': '../../packages/@minui/wxc-icon/dist/index',
      'wxc-panel': '../../packages/@minui/wxc-panel/dist/index',
      'wxc-flex': '../../packages/@minui/wxc-flex/dist/index',
      'wxc-toast': '../../packages/@minui/wxc-toast/dist/index',
      'wxc-tab': '../../packages/@minui/wxc-tab/dist/index',
      'wxc-tab-panel': '../../packages/@minui/wxc-tab/dist/panel',
      'wxc-tab-label': '../../packages/@minui/wxc-tab/dist/label',
    }
  };
  data = {
    $toast: {
      show: false,
      title: '',
      icon: ''
    },
    tabs: [
      {title: 'IT设备', content: ''},
      {title: '仓库固定资产', content: ''},
      {title: '仓库耗材', content: ''},
      {title: '行政固定资产', content: ''},
      // {title: '行政耗材', content: ''},
    ],
    // products:[],
    list: [
      {
        title: 'Beats耳机',
        desc: 'Beats耳机',
        price: 1213,
        src: '/static/images/products/pro_1.png'
      },
      {
        title: '蓝牙音箱',
        desc: '蓝牙音箱',
        price: 1213,
        src: '/static/images/products/pro_2.png'
      },
      {
        title: '包装箱',
        desc: '包装箱',
        price: 1213,
        src: '/static/images/products/pro_3.png'
      },
      {
        title: '文件袋',
        desc: '文件袋',
        price: 1213,
        src: '/static/images/products/pro_4.png'
      },
      {
        title: '二维码扫描枪',
        desc: '二维码扫描枪',
        price: 1213,
        src: '/static/images/products/pro_5.png'
      },
      {
        title: 'iPad Air',
        desc: 'iPad Air',
        price: 1213,
        src: '/static/images/products/pro_6.png'
      },
      {
        title: 'iMac Pro',
        desc: 'iMac Pro',
        price: 1213,
        src: '/static/images/products/pro_7.png'
      },
      {
        title: 'TrackPad',
        desc: 'TrackPad',
        price: 1213,
        src: '/static/images/products/pro_8.png'
      },
      {
        title: '便携音箱',
        desc: '便携音箱',
        price: 1213,
        src: '/static/images/products/pro_9.png'
      },
      {
        title: 'iWatch',
        desc: 'iWatch',
        price: 1213,
        src: '/static/images/products/pro_10.png'
      },
      {
        title: 'MacBookPro',
        desc: 'MacBookPro',
        price: 1213,
        src: '/static/images/products/pro_11.png'
      },
      {
        title: 'MacBook',
        desc: 'MacBook',
        price: 1213,
        src: '/static/images/products/pro_12.png'
      }
    ]
  };
  methods = {
    desc() {
      return Math.random()
        .toString(36)
        .substr(2);
    },

    price() {
      return Math.ceil(Math.random() * 1000) + 1000
    },

    random: function(e) {
      console.log(`ComponentId:${e.detail.componentId},you selected:${e.detail.key}`);
      let res = [];
      const team = this.data.list.slice(0);
      // console.log(team)
      for (var i = 0, len = team.length; i < len; i++) {
        // 随机叫个
        var randomIndex = Math.floor(Math.random() * team.length);
        // 出列到新队伍
        res[i] = team[randomIndex];
        res[i].desc =  this.methods.desc();
        res[i].price =  this.methods.price();
        // 原来的队伍人越来越少，因此上面的 randomIndex 需要实时获取 team.length
        team.splice(randomIndex, 1);
      }

      this.setData({
        'products': res
      });
    },

    gotoCart() {
      wepy.navigateTo({
          url: 'cart'
        })
    },
    
    gotoCollection() {
      this.$toast = {
          show: true,
          title: '添加收藏成功',
          icon: 'yes'
        }
        setTimeout(() => {
          this.$toast = {
            show: false,
            title: '',
            icon: ''
          }
          this.$apply();
        }, 1000)
    }

  };

  onLoad() {
    //页面渲染完成
    console.log('index Ready');
    const newData = this.list.map(item => {
      return {
        title: item.title,
        src: item.src,
        desc: this.methods.desc(),
        price: this.methods.price()
      }
    });

    // console.log(newData);
    this.setData({
      'products': newData
    });
  }
}
</script>
